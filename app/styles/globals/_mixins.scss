/**
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

@mixin clearit {
	*zoom: 1;
	&:before,
	&:after {
		content: " "; /* 1 */
		display: table; /* 2 */
	}
	&:after {
		clear: both;
	}
}

// ---------------------------------- Media Query ------------------------------------------

@mixin shortBreakpointMax($max) {
	@media (max-width: #{$max}px) {
		@content;
	} 
}

@mixin shortBreakpointMin($min) {
	@media (min-width: #{$min}px) {
		@content;
	} 
}

@mixin breakpoint($min-width, $max-width, $media-type: false) {
  @if $media-type {
    @media #{$media-type} and (min-width: #{$min-width}px) and (max-width: #{$max-width}px) {
      @content;
    }
  } @else {
    @media (min-width: #{$min-width}px) and (max-width: #{$max-width}px) {
      @content;
    }
  }
}

// ---------------------------------- Transition -------------------------------------------
@mixin transition($property, $duration, $easing: linear) {
	transition: $property $duration $easing;
}

// ---------------------------------- Border Radius ----------------------------------------
@mixin border-radius($allCorner) {
	border-radius: $allCorner;
}

@mixin border-all-radius($topleft, $topright, $bottomright, $bottomleft) {
	border-top-left-radius: $topleft;
	border-top-right-radius: $topright;
	border-bottom-right-radius: $bottomright;
	border-bottom-left-radius: $bottomleft;
}

// ---------------------------------- Grid Custom -------------------------------------------

@mixin flexOwnGrid($child, $kol, $mr, $mb) { // Mixing ini digunakan di parentnya
	padding: 0;
	margin: 0;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	list-style: none; // jika elem parentnya ul
	#{$child} {
		margin-right: $mr;
		margin-bottom: #{$mb}px;
		width: ((100% - (($kol - 1) * $mr)) / $kol);
		&:nth-child(#{$kol}n) {
			margin-right: 0;
		}
	}
}

@mixin ownGrid($cols, $mgn) {
	float: left;
	margin-right: $mgn;
	margin-bottom: $mgn;
	width: ((100% - (($cols - 1) * $mgn)) / $cols);
	&:nth-child(#{$cols}n) {
		margin-right: 0;
	}
}

// ---------------------------------- Border Dot -------------------------------------------
@mixin borderDotVer {
	&:after {
		position: absolute;
		bottom: 0;
		content: '';
		width: 2px;
		height: 100%;
		display: block;
		background-image: linear-gradient(to bottom, #fff 20%, rgba(255, 255, 255, 0) 20%);
		opacity: .5;
		background-position: top;
		background-size: 1px 6px;
		background-repeat: repeat-y;
	}
}

@mixin borderDotVerBefore{
	&:before {
		position: absolute;
		bottom: 0;
		content: '';
		width: 2px;
		height: 100%;
		display: block;
		background-image: linear-gradient(to bottom, #777 20%, rgba(255, 255, 255, 0) 20%);
		opacity: .5;
		background-position: top;
		background-size: 1px 3px;
		background-repeat: repeat-y;
	}
}

@mixin borderDotSpace {
	&:after {
		position: absolute;
		bottom: 0;
		content: '';
		width: 100%;
		height: 2px;
		display: block;
		background-image: linear-gradient(to right, #000 10%, rgba(255, 255, 255, 0) 0%);
		background-position: top;
		background-size: 10px 1px;
		background-repeat: repeat-x;
	}
}

@mixin noBorderDot {
	&:last-child {
		&:before,
		&:after {
			background-image: none;
		}
	}
}